---
import Logo from '@components/Logo.astro';
import { CONFIG } from 'site.config.mjs';
import SocialMedia from './socialMedia.astro';
---
<header class="bg-transparent">
  <nav class="mx-auto flex max-w-7xl items-center justify-between p-6 lg:px-8" aria-label="Global">
    <div class="flex items-center gap-x-12">
      <a href="/" class="-m-1.5 p-1.5">
        <span class="sr-only">{CONFIG.SITE_NAME}</span>
        <Logo />
      </a>
      <ul class="hidden lg:flex lg:gap-x-12">
        <slot />
      </ul>
    </div>
    <div class="flex lg:hidden">
      <menu-button>
        <template>
          <button type="button" class="menu-button -m-2.5 inline-flex items-center justify-center rounded-md p-2.5 text-gray-700 z-10" aria-expanded="false">
            <span class="sr-only">Open main menu</span>
            <svg class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" aria-hidden="true">
              <path stroke-linecap="round" stroke-linejoin="round" d="M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25h16.5" />
            </svg>
          </button>
        </template>
      </menu-button>
    </div>
    <div class="hidden lg:flex group">
      <a href="/contact-form" class="text-sm font-semibold leading-6 text-gray-900">
        Contact
        <span aria-hidden="true" class="text-sm font-semibold leading-6 text-gray-900 hover:text-orange-500">&rarr;</span>
      </a>
    </div>
  </nav>
  <!-- Mobile menu, show/hide based on menu open state. -->
  <div id="menu-content" class="md:hidden" role="dialog" aria-modal="true">
    <!-- Background backdrop, show/hide based on slide-over state. -->
    <div id="bgDrop" class="fixed inset-0 z-10 bg-white/40" />
    <div class="fixed inset-y-0 right-0 z-10 w-full overflow-y-auto bg-white px-6 py-6 sm:max-w-sm sm:ring-1 sm:ring-gray-900/10">
      <div class="flex items-center justify-between">
        <a href="/" class="-m-1.5 p-1.5">
          <span class="sr-only">Elementjob</span>
          <Logo />
        </a>
        <menu-button>
          <template>
            <button type="button" class="-m-2.5 rounded-md p-2.5 text-gray-700">
              <span class="sr-only">Close menu</span>
              <svg class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" aria-hidden="true">
                <path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12" />
              </svg>
            </button>
          </template>
        </menu-button>
      </div>
      <div class="mt-6 flow-root">
        <div class="-my-6 pb-10 divide-y divide-gray-500/10">
          <ul class="flex flex-col space-y-2 py-6">
            <slot />
          </ul>
          <div>
            <h2 class="text-3xl font-bold tracking-tight text-gray-900 pt-6">Contact</h2>
            <div class="pb-6 mt-6 grid grid-cols-1 text-base leading-7 gap-y-4">
              <div>
                <h3 class="border-l border-primary pl-6 font-semibold text-gray-900">Gondellaan 33 (geen bezoekadres)
                </h3>
                <address class="border-l border-gray-200 pt-2 pl-6 not-italic text-gray-600">
                  <p>1503KP</p>
                  <p>Zaandam</p>
                  <p>info@elementjob.com</p>
                  <p>+316 40 22 43 33</p>
                </address>
              </div>
            </div>
          </div>
          <SocialMedia />
        </div>
      </div>
    </div>
  </div>
</header>

<script>
	class MenuButton extends HTMLElement {
		constructor() {
			super();

			// Inject menu toggle button when JS runs.
			this.appendChild(this.querySelector('template')!.content.cloneNode(true));
			const btn = this.querySelector('button')!;
			const bgDrop = document.getElementById('bgDrop')!;

			// Hide menu (shown by default to support no-JS browsers).
			const menu = document.getElementById('menu-content')!;
			menu.hidden = true;

			/** Set whether the menu is currently expanded or collapsed. */
			const setExpanded = (expand: boolean) => {
				btn.setAttribute('aria-expanded', expand ? 'true' : 'false');
				menu.hidden = !expand;
			};

			// Toggle menu visibility when the menu button is clicked.
			btn.addEventListener('click', () => setExpanded(menu.hidden));
			bgDrop.addEventListener('click', () => setExpanded(menu.hidden));

			// Hide menu button for large screens.
			const handleViewports = (e: MediaQueryList | MediaQueryListEvent) => {
				setExpanded(e.matches);
				btn.hidden = e.matches;
			};
			let mediaQueries = window.matchMedia('(min-width: 50em)');
			handleViewports(mediaQueries);

			mediaQueries.addEventListener('change', handleViewports);
		}
	}
	customElements.define('menu-button', MenuButton);
</script>


<style>


</style>